--- a/drivers/staging/mt7621-pinctrl/pinctrl-rt2880.c
+++ b/drivers/staging/mt7621-pinctrl/pinctrl-rt2880.c
@@ -172,6 +172,39 @@ static int rt2880_pmx_group_gpio_request
 	return 0;
 }
 
+static int rt2880_pmx_group_default_gpio(struct rt2880_priv *p,
+					 unsigned int func, unsigned int group)
+{
+	u32 mode = 0;
+	u32 reg = SYSC_REG_GPIO_MODE;
+	int i;
+	int shift;
+
+	shift = p->groups[group].shift;
+	if (shift >= 32) {
+		shift -= 32;
+		reg = SYSC_REG_GPIO_MODE2;
+	}
+	mode = rt_sysc_r32(reg);
+	mode &= ~(p->groups[group].mask << shift);
+
+	/* mark the pins as gpio */
+	for (i = 0; i < p->groups[group].func[0].pin_count; i++)
+		p->gpio[p->groups[group].func[0].pins[i]] = 1;
+
+	/* function 0 is gpio and needs special handling */
+	if (func == 0) {
+		mode |= p->groups[group].gpio << shift;
+	} else {
+		for (i = 0; i < p->func[func]->pin_count; i++)
+			p->gpio[p->func[func]->pins[i]] = 0;
+		mode |= p->func[func]->value << shift;
+	}
+	rt_sysc_w32(mode, reg);
+
+	return 0;
+}
+
 static const struct pinmux_ops rt2880_pmx_group_ops = {
 	.get_functions_count	= rt2880_pmx_func_count,
 	.get_function_name	= rt2880_pmx_func_name,
@@ -313,6 +346,13 @@ static int rt2880_pinmux_pins(struct rt2
 	p->desc->pins = p->pads;
 	p->desc->npins = p->max_pins;
 
+	for (i = 0; i < p->func_count; i++) {
+		if (!p->func[i]->pin_count)
+			continue;
+
+		rt2880_pmx_group_default_gpio(p, 0, i);
+	}
+
 	return 0;
 }
 
